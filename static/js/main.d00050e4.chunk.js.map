{"version":3,"sources":["Header.js","Search.js","ExtendedView.js","Concert.js","ConcertDisplay.js","AudioPlayer.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","src","alt","Search","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","goPhishing","inputValue","document","querySelector","value","toLowerCase","props","updateCurrentDisplay","setState","suggestions","trie","suggest","Trie","state","concertVenues","concertDates","songs","length","trieData","populate","concat","_this2","onClick","e","toggleShowAllConcerts","type","placeholder","onChange","autoFocus","list","id","map","suggestion","updateRandomConcertData","Component","ExtendedView","convertTime","ms","milliseconds","parseInt","hours","Math","floor","minutes","seconds","returnFromExtendedView","currentShow","date","venue","name","location","setlist","song","index","key","position","updateCurrentSongIndex","title","duration","Concert","concert","goToExtendedView","img","ConcertDisplay","extendedView","updateCurrentSetlist","displayVenueSearch","filteredShows","currentSearch","concertData","filter","includes","songSearch","forEach","setlistData","push","indices","i","num","random","showAllConcerts","Concert_Concert","ExtendedView_ExtendedView","currentSetlist","searchResults","AudioPlayer","togglePlay","audio","playButton","paused","currentSong","mp3","play","innerHTML","pause","updateSeekBar","seekBar","target","currentTime","goToNextSong","checkForNewSong","updateSongPosition","readyState","time","handleMouseDown","max","dragging","handleMouseUp","load","changeVolume","volume","volumeControl","dir","onTimeUpdate","changeSong","onMouseDown","onMouseUp","min","App","boolean","undefined","preventDefault","forceUpdate","show","find","isSongFinished","searchValue","songIndex","fetch","then","response","json","phishShows","Array","from","catch","error","console","setListData","showKeys","keys","setLists","newSongs","Search_Search","ConcertDisplay_ConcertDisplay","updateCurrentSong","AudioPlayer_AudioPlayer","Boolean","window","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d00050e4.chunk.js","sourcesContent":["import React from 'react';\nimport './styles/main.scss';\n\nexport default function Header() {\n\n  return (\n    <header>\n      <h1 className=\"header-plenty\">PLENTY</h1>\n      <h1 className=\"header-of\">OF</h1>\n      <img className=\"header-img\"\n        src=\"https://www.logolynx.com/images/logolynx/a4/a48597184b96ba3cb64ee133bcd52ad4.png\"\n        alt=\"Rainbow Phish Logo\"/>\n    </header>\n  );\n}","import React, { Component } from 'react';\nimport Trie from '@jarushford/autocomplete';\nimport './styles/main.scss';\n\nexport default class Search extends Component {\n  constructor() {\n    super();\n    this.trie = new Trie();\n    this.state = {\n      suggestions: []\n    }\n  }\n\n  componentDidUpdate() {\n    if (!this.state.concertVenues && !this.state.concertDates) {\n      this.setState({\n        concertVenues: this.props.concertVenues,\n        concertDates: this.props.concertDates,\n      })\n    }\n    if (!this.state.songs && this.props.songs.length) {\n      this.setState({\n        songs: this.props.songs,\n        trieData: this.trie.populate([].concat(this.state.concertVenues, this.state.concertDates, this.props.songs))\n      })\n    }\n  }\n  \n  goPhishing = () => {\n    let inputValue = document.querySelector('.search-input')\n      .value.toLowerCase();\n    this.props.updateCurrentDisplay(inputValue);\n    this.setState({\n      suggestions: this.trie.suggest(inputValue)\n    })\n  }\n\n  render() {\n    return (\n      <form>\n        <button className=\"view-btn\" \n          onClick={e => this.props.toggleShowAllConcerts(true, e)}>\n        View All</button>\n        <input\n          className=\"search-input\" \n          type=\"text\"\n          placeholder=\"Search for a Song, Venue, or Show Date\"\n          onChange={this.goPhishing} \n          autoFocus\n          list=\"data-list\"\n        />\n        <datalist id=\"data-list\">\n          {this.state.suggestions.map(suggestion => {\n            return <option value={suggestion}></option>\n          })}\n        </datalist>\n        <button className=\"random-btn\" \n          onClick={(e) => this.props.updateRandomConcertData(e)}>\n        Random Shows</button>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './styles/main.scss';\n\nexport default class ExtendedView extends Component {\n\n  convertTime = (ms) => {\n    var milliseconds = parseInt(ms);\n    var hours = Math.floor(milliseconds / 3600000);\n    var minutes = Math.floor((milliseconds - (hours * 3600000)) / 60000);\n    var seconds = parseInt((milliseconds - (hours * 3600000) - \n      (minutes * 60000)) / 1000);\n\n    if (seconds < 10) {\n      return `${minutes}:0${seconds}`;\n    }\n    return `${minutes}:${seconds}`;\n  }\n\n  render() {\n    return (\n      <section className='song-table-container'>\n        <section className='venue-info-container'>\n          <i className=\"fas fa-chevron-left\" \n            onClick={this.props.returnFromExtendedView}></i>\n          <section className='venue-info'>\n            <h3 className='venue-date'>{this.props.currentShow.date}</h3>\n            <h2 className='venue-name'>{this.props.currentShow.venue.name}</h2>\n            <h3 className='venue-location'>\n              {this.props.currentShow.venue.location}</h3>\n          </section>\n        </section>\n        <table className='song-table'>\n          <tbody>\n            {\n              this.props.setlist.map((song, index) => {\n                return <tr className='song-table-row' key={index}>\n                  <td className='song-table-position'>{song.position}</td>\n                  <td className='song-table-title' \n                    onClick={() => \n                      this.props.updateCurrentSongIndex(index)}>\n                    <i className='far fa-play-circle'></i>{song.title}</td>\n                  <td className='song-table-duration' >\n                    {this.convertTime(song.duration)}</td>\n                </tr>; \n              })                         \n            }\n          </tbody>\n        </table>\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nimport './styles/main.scss';\n\nexport default class Concert extends Component {\n  \n  render() {\n    return (\n      <article className=\"concert\" key={this.props.concert.id} \n        onClick={() => this.props.goToExtendedView(this.props.concert.id)}>\n        <i className=\"far fa-play-circle\"></i>\n        <img className=\"concert-image\" src={this.props.concert.venue.img}\n          alt=\"image of concert venue\"/>\n        <div className=\"concert-text-display\">\n          <p className=\"concert-date\">{this.props.concert.date}</p>\n          <p className=\"concert-venue\">{this.props.concert.venue.name}</p>\n          <p className=\"concert-location\">{this.props.concert.venue.location}\n          </p>\n        </div>\n      </article>\n    );\n  }\n}","import React, { Component } from 'react';\nimport './styles/main.scss';\nimport ExtendedView from './ExtendedView';\nimport Concert from './Concert.js';\n\nexport default class ConcertDisplay extends Component {\n  constructor() {\n    super();\n    this.state = {\n      extendedView: false\n    };\n  }\n\n  returnFromExtendedView = () => {\n    this.setState({\n      extendedView: false\n    });\n  }\n\n  goToExtendedView = (id) => {\n    this.setState({\n      extendedView: true\n    });\n    this.props.toggleShowAllConcerts();\n    this.props.updateCurrentSetlist(id);\n  }\n\n  displayVenueSearch = () => {\n    const { currentSearch } = this.props;\n    let filteredShows;\n\n    filteredShows = this.props.concertData.filter(concert => {\n      return concert.venue.name.toLowerCase().includes(currentSearch) ||\n        concert.date.includes(currentSearch) || \n        concert.venue.location.toLowerCase().includes(currentSearch);\n    });\n    if (filteredShows.length === 0) {\n      filteredShows = this.songSearch(currentSearch);\n    }\n    return filteredShows;\n  }\n\n  songSearch = (currentSearch) => {\n    let filteredShows = [];\n\n    this.props.concertData.forEach(concert => {\n      this.props.setlistData[concert.id].forEach(song => {\n        if (song.title.toLowerCase().includes(currentSearch)) {\n          filteredShows.push(concert);\n        }\n      });\n    });\n    return filteredShows;\n  }\n\n  render() {\n    const indices = [];\n    const {currentSearch} = this.props;\n\n    for (var i = 0; i < 8; i ++) {\n      let num = Math.floor(Math.random() * this.props.concertData.length);\n\n      indices.push(num);\n    }\n    if (this.props.showAllConcerts === true && currentSearch === '') {\n      return (\n        <main className=\"concert-display\">\n          <div className=\"concert-grid\">\n            {this.props.concertData.map((concert, i) => {\n              return <Concert concert={concert}\n                goToExtendedView={this.goToExtendedView}\n                key={i}/>;\n            })}\n          </div>  \n        </main>\n      );\n    } else if (currentSearch === '' && this.state.extendedView === false &&\n      this.props.concertData.length > 0) {\n      return (\n        <main className=\"concert-display\">\n          <div className=\"concert-grid\">\n            {indices.map((concert, i) => {\n              return <Concert concert={this.props.concertData[concert]}\n                goToExtendedView={this.goToExtendedView}\n                key={i}/>;\n            })}\n          </div>\n        </main>\n      );\n    } else if (this.state.extendedView === true) {\n      return (\n        <main className=\"concert-display\">\n          <ExtendedView setlist={this.props.currentSetlist}\n            updateCurrentSongIndex={this.props.updateCurrentSongIndex}\n            currentShow={this.props.currentShow}\n            returnFromExtendedView={this.returnFromExtendedView} />\n        </main>\n      );\n    } else {\n      let searchResults = this.displayVenueSearch();\n\n      if (searchResults.length === 0 && this.props.concertData.length > 0) {\n        return (\n          <main className=\"error-display\">\n            <h1>Didn&apos;t catch anything on that one!</h1>\n          </main>\n        );\n      } else {\n        return (\n          <main className=\"concert-display\">\n            <div className=\"concert-grid\">\n              {searchResults.map((concert, i) => {\n                return <Concert concert={concert}\n                  goToExtendedView={this.goToExtendedView}\n                  key={i}/>;\n              })}\n            </div>\n          </main>\n        );\n      }\n    }\n  }\n}\n\n\n","import React, { Component } from 'react';\nimport './styles/main.scss';\n\nexport default class AudioPlayer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      dragging: false,\n      mp3: ''\n    };\n  }\n\n  componentDidMount() {\n    const seekBar = document.querySelector('.seek-bar');\n    const volumeControl = document.querySelector('.volume-control');\n\n    seekBar.value = 0;\n    volumeControl.value = 100;\n  }\n\n  componentDidUpdate() {\n    const audio = document.querySelector('.audio-clip');\n    const seekBar = document.querySelector('.seek-bar');\n    const playButton = document.querySelector('.play-pause');\n\n    if (this.props.currentSetlist[this.props.currentSong].mp3 !== '' && \n    this.props.currentSetlist[this.props.currentSong].mp3 !== this.state.mp3) {\n      this.setState({\n        mp3: this.props.currentSetlist[this.props.currentSong].mp3\n      });\n      playButton.innerHTML = '<i class=\"fas fa-pause\"></i>';\n      audio.currentTime = 0;\n      seekBar.value = 0;\n      audio.load();\n      audio.play();\n    }\n  }\n\n  togglePlay = () => {\n    const audio = document.querySelector('.audio-clip');\n    const playButton = document.querySelector('.play-pause');\n\n    if (audio.paused === true &&\n      this.props.currentSetlist[this.props.currentSong].mp3 !== '') {\n      audio.play();\n      playButton.innerHTML = '<i class=\"fas fa-pause\"></i>';\n    } else {\n      audio.pause();\n      playButton.innerHTML = '<i class=\"fas fa-play\">';\n    }\n  }\n\n  updateSeekBar = (e) => {\n    const audio = document.querySelector('.audio-clip');\n    const seekBar = e.target;\n    const playButton = document.querySelector('.play-pause');\n    let value = (100 / audio.duration) * audio.currentTime;\n\n    if (value === 100 && this.props.currentSong <\n      this.props.currentSetlist.length - 1) {\n      this.props.goToNextSong(1);\n      this.checkForNewSong();\n    } else if (value === 100 && this.props.currentSong === \n      this.props.currentSetlist.length - 1) {\n      playButton.innerHTML = '<i class=\"fas fa-play\"></i>';\n    } else {\n      seekBar.value = value;\n    }\n    document.querySelector('.current-time').innerHTML = \n      this.convertTime(audio.currentTime * 1000);\n  }\n\n  updateSongPosition = (e) => {\n    const audio = document.querySelector('.audio-clip');\n    const seekBar = e.target;\n\n    if (audio.readyState > 2) {\n      let time = audio.duration * (seekBar.value / 100);\n\n      audio.currentTime = time;\n    }\n  }\n\n  handleMouseDown = () => {\n    const audio = document.querySelector('.audio-clip');\n    const seekBar = document.querySelector('.seek-bar');\n\n    seekBar.max = 100;\n    if (audio.paused === false) {\n      audio.pause();\n      this.setState({\n        dragging: true\n      });\n    }\n  }\n\n  handleMouseUp = () => {\n    const audio = document.querySelector('.audio-clip');\n\n    if (this.state.dragging === true) {\n      audio.play();\n      this.setState({\n        dragging: false\n      });\n    }\n  }\n\n  convertTime = (ms) => {\n    let milliseconds = parseInt(ms);\n    let hours = Math.floor(milliseconds / 3600000);\n    let minutes = Math.floor((milliseconds - (hours * 3600000)) / 60000);\n    let seconds = parseInt((milliseconds - (hours * 3600000) - \n      (minutes * 60000)) / 1000);\n\n    if (seconds < 10) {\n      return `${minutes}:0${seconds}`;\n    }\n    return `${minutes}:${seconds}`;\n  }\n\n  checkForNewSong = () => {\n    const audio = document.querySelector('.audio-clip');\n    const playButton = document.querySelector('.play-pause');\n\n    if (this.props.currentSetlist[this.props.currentSong].mp3 !== '' && \n      this.props.currentSetlist[this.props.currentSong].mp3 !== \n        this.state.mp3) {\n      this.setState({\n        mp3: this.props.currentSetlist[this.props.currentSong].mp3\n      });\n      audio.load();\n      audio.play();\n      playButton.innerHTML = '<i class=\"fas fa-pause\"></i>';\n    }\n  }\n\n  changeSong(dir) {\n    const audio = document.querySelector('.audio-clip');\n    const playButton = document.querySelector('.play-pause');\n    const seekBar = document.querySelector('.seek-bar');\n\n    seekBar.max = 0;\n    audio.pause();\n    if (dir === 1 && this.props.currentSong < \n      this.props.currentSetlist.length - 1) {\n      this.props.goToNextSong(1);\n      this.checkForNewSong();\n    } else if (dir === -1 && this.props.currentSong > 0) {\n      this.props.goToNextSong(-1);\n      this.checkForNewSong();\n    } else {\n      seekBar.value = 0;\n      audio.currentTime = 0;\n      playButton.innerHTML = '<i class=\"fas fa-play\"></i>';\n    }\n  }\n\n  changeVolume = () => {\n    const audio = document.querySelector('.audio-clip');\n    const volumeControl = document.querySelector('.volume-control');\n    let volume = volumeControl.value / 100;\n\n    audio.volume = volume;\n  }\n\n  render() {\n    let song = this.props.currentSetlist[this.props.currentSong];\n    return (\n      <footer className='audio-player'>\n        <section className=\"current-song-display\">\n          <h3 className=\"audio-player-song\">\n            {song.title}</h3>\n          <p className=\"audio-player-venue\">\n            {this.props.currentShow.venue.name}</p>\n          <p className=\"audio-player-location\">\n            {this.props.currentShow.venue.location}</p>\n        </section>\n        <section className=\"audio-player-controls\">\n          <video className=\"audio-clip\" onTimeUpdate={this.updateSeekBar}>\n            <source src={song.mp3}\n              type=\"audio/mpeg\"></source>\n          </video>\n          <div className=\"audio-controls\">\n            <p className=\"current-time\">0:00</p>\n            <div>\n              <i className=\"fas fa-step-backward\" \n                onClick={() => this.changeSong(-1)}></i>\n              <button onClick={this.togglePlay} \n                type=\"button\" className=\"play-pause\"><i \n                  className=\"fas fa-play\"></i></button>\n              <i className=\"fas fa-step-forward\" \n                onClick={() => this.changeSong(1)}></i>\n            </div>\n            <input onChange={this.updateSongPosition} \n              onMouseDown={this.handleMouseDown} onMouseUp={this.handleMouseUp}\n              type=\"range\" className=\"seek-bar\"  min=\"0\" max=\"0\"/>\n            <p className=\"song-length\">\n              {this.convertTime(song.duration)}\n            </p>\n          </div>\n          <input type=\"range\" className=\"volume-control\" \n            onChange={this.changeVolume} min=\"0\" max=\"100\" />\n        </section>\n      </footer>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './styles/main.scss';\nimport Header from './Header';\nimport Search from './Search';\nimport ConcertDisplay from './ConcertDisplay';\nimport AudioPlayer from './AudioPlayer';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentSong: 0,\n      currentSetlist: [{title: '--', mp3: '', duration: 0}],\n      currentShow: {date: \"--\", venue: {name: \"--\", location: \"--\"}},\n      currentSearch: '',\n      concertData: [],\n      showAllConcerts: false,\n      concertVenues: [],\n      concertDates: [],\n      songs: []\n    };\n  } \n\n  componentDidMount() {\n    fetch('https://whateverly-datasets.herokuapp.com/api/v1/phishShows')\n      .then(response => response.json()) \n      .then(concertData => {\n        this.setState({\n          concertData: concertData.phishShows,\n          concertVenues: Array.from(concertData.phishShows).map(show => {\n            return show.venue.name;\n          }),\n          concertDates: Array.from(concertData.phishShows).map(show => {\n            return show.date;\n          })\n        })\n      })\n      .catch(error => console.error(error));\n    fetch('https://whateverly-datasets.herokuapp.com/api/v1/setLists')\n      .then(response => response.json())\n      .then(setListData => {\n        const showKeys = Object.keys(setListData.setLists);\n        const newSongs = [];\n        showKeys.forEach(show => {\n          Array.from(setListData.setLists[show]).forEach(song => {\n            newSongs.push(song.title);\n          });\n        });\n        this.setState({\n          setlistData: setListData.setLists,\n          songs: newSongs\n        })\n      })\n      .catch(error => console.error(error));\n  }\n\n  toggleShowAllConcerts = (boolean, e) => {\n    if (e !== undefined) {\n      e.preventDefault();\n    }\n    this.setState({\n      showAllConcerts: boolean\n    });\n  }\n\n  updateRandomConcertData = (e) => {\n    e.preventDefault();\n    this.toggleShowAllConcerts(false, e);\n    this.forceUpdate();\n  }\n\n  updateCurrentSetlist = (id) => {\n    let show = this.state.concertData.find((concert) => {\n      return concert.id === id;\n    });\n\n    this.setState({\n      currentSetlist: this.state.setlistData[id],\n      currentShow: show\n    });\n  }\n\n  goToNextSong = (isSongFinished) => {\n    if (isSongFinished === 1) {\n      this.setState({\n        currentSong: this.state.currentSong + 1\n      });\n    } else {\n      this.setState({\n        currentSong: this.state.currentSong - 1\n      });\n    }\n  }\n\n  updateCurrentDisplay = (searchValue) => {\n    this.setState({\n      currentSearch: searchValue\n    });\n  }\n\n  updateCurrentSongIndex = (songIndex) => {\n    this.setState({\n      currentSong: songIndex\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Search updateCurrentDisplay={this.updateCurrentDisplay}\n          updateRandomConcertData={this.updateRandomConcertData}\n          concertDates={this.state.concertDates}\n          songs={this.state.songs}\n          concertVenues={this.state.concertVenues}\n          toggleShowAllConcerts={this.toggleShowAllConcerts}/>\n        <ConcertDisplay concertData={this.state.concertData}\n          showAllConcerts={this.state.showAllConcerts}\n          currentShow={this.state.currentShow}\n          currentSetlist={this.state.currentSetlist}\n          setlistData={this.state.setlistData}\n          currentSearch={this.state.currentSearch}\n          updateCurrentSong={this.updateCurrentSong}\n          updateCurrentSongIndex={this.updateCurrentSongIndex}\n          updateCurrentSetlist={this.updateCurrentSetlist}\n          updateRandomConcertData={this.updateRandomConcertData}\n          toggleShowAllConcerts={this.toggleShowAllConcerts}/>\n        <AudioPlayer currentSong={this.state.currentSong}\n          currentSetlist={this.state.currentSetlist}\n          currentShow={this.state.currentShow}\n          goToNextSong={this.goToNextSong} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}